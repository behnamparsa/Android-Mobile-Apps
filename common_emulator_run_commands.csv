Run Command,Count
"""uses"": ""reactivecircus/android-emulator-runner@v2"",",40
"""emulator-options"": ""-no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none"",",18
"""path"": ""~/.android/avd/*\n~/.android/adb*\n"",",17
"""emulator-options"": ""-no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none"",",16
"""uses"": ""reactivecircus/android-emulator-runner@d94c3fbe4fe6a29e4a5ba47c12fb47677c73656b"",",4
"""emulator-boot-timeout"": 900,",3
"""script"": ""cd mobile-app && if adb shell pm list packages | grep -q org.freecodecamp; then adb uninstall org.freecodecamp; fi && dart integration_test_runner.dart""",2
"""uses"": ""reactivecircus/android-emulator-runner@v2.28.0"",",2
"""avd-name"": ""Emulator"",",2
"""name"": ""Run tests in emulator"",",2
"""emulator-options"": ""-gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -camera-back none"",",2
"""emulator-options"": ""-no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim"",",2
"""emulator-options"": ""-no-snapshot-save -noaudio -no-boot-anim -camera-back none -skin 540x1110"",",2
"""name"": ""Create Android emulator"",",1
"""run"": ""adb shell monkey -p net.activitywatch.android.debug 1\nsleep 10\nscreencapture screenshots/pscreenshot-$SUFFIX.jpg\n$ANDROID_HOME/platform-tools/adb exec-out screencap -p > screenshots/pemulator-$SUFFIX.png\nls -alh screenshots/\n""",1
"""run"": ""mkdir -p mobile/build\nadb logcat -d > mobile/build/logcat.log\nadb logcat -v color &\n""",1
"""run"": ""echo \""Starting emulator and waiting for boot to complete....\""\nls -la $ANDROID_HOME/emulator\nnohup $ANDROID_HOME/tools/emulator -avd $MATRIX_AVD -gpu host -no-audio -no-boot-anim -camera-back none -camera-front none -qemu -m 2048 2>&1 &\n$ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\\r') ]]; do echo \""wait...\""; sleep 1; done; input keyevent 82'\necho \""Emulator has finished booting\""\n$ANDROID_HOME/platform-tools/adb devices\nsleep 30\nmkdir -p screenshots\nscreencapture screenshots/screenshot-$SUFFIX.jpg\n$ANDROID_HOME/platform-tools/adb exec-out screencap -p > screenshots/emulator-$SUFFIX.png\n""",1
"""name"": ""Start Android emulator"",",1
"""run"": ""brew install intel-haxm\n# Install AVD files\necho \""y\"" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-'$MATRIX_E_SDK';default;x86_64'\necho \""y\"" | $ANDROID_HOME/tools/bin/sdkmanager --licenses\n\n# Create emulator\n$ANDROID_HOME/tools/bin/avdmanager create avd -n $MATRIX_AVD -d pixel --package 'system-images;android-'$MATRIX_E_SDK';default;x86_64'\n$ANDROID_HOME/emulator/emulator -list-avds\nif false; then\nemulator_config=~/.android/avd/$MATRIX_AVD.avd/config.ini\n# The following madness is to support empty OR populated config.ini files,\n# the state of which is dependant on the version of the emulator used (which we don't control),\n# so let's be defensive to be safe.\n# Replace existing config (NOTE we're on MacOS so sed works differently!)\nsed -i .bak 's/hw.lcd.density=.*/hw.lcd.density=420/' \""$emulator_config\""\nsed -i .bak 's/hw.lcd.height=.*/hw.lcd.height=1920/' \""$emulator_config\""\nsed -i .bak 's/hw.lcd.width=.*/hw.lcd.width=1080/' \""$emulator_config\""\n# Or, add new config\nif ! grep -q \""hw.lcd.density\"" \""$emulator_config\""; then\n  echo \""hw.lcd.density=420\"" >> \""$emulator_config\""\nfi\nif ! grep -q \""hw.lcd.height\"" \""$emulator_config\""; then\n  echo \""hw.lcd.height=1920\"" >> \""$emulator_config\""\nfi\nif ! grep -q \""hw.lcd.width\"" \""$emulator_config\""; then\n  echo \""hw.lcd.width=1080\"" >> \""$emulator_config\""\nfi\necho \""Emulator settings ($emulator_config)\""\ncat \""$emulator_config\""\nfi\n""",1
"""run"": ""$ANDROID_HOME/emulator/emulator -no-window -avd ci-test -noaudio > /dev/null &""",1
"""run"": ""$ANDROID_HOME/tools/bin/avdmanager create avd -n ci-test -k \""system-images;android-29;google_apis;x86_64\"" -d \""pixel\""""",1
"""name"": ""Start Android Emulator"",",1
"""name"": ""Run Emulator Tests"",",1
"""script"": ""touch adb-log.txt\n$ANDROID_HOME/platform-tools/adb logcat '*:D' >> adb-log.txt &\n$ANDROID_HOME/platform-tools/adb shell su root \""setprop ctl.restart zygote\""\nsleep 10\nsleep $FIRST_BOOT_DELAY\nadb logcat --clear\necho \""First boot warmup completed.\""\n""",1
"""name"": ""Emulator Snapshot After Firstboot Warmup"",",1
"""script"": ""touch adb-log.txt\n$ANDROID_HOME/platform-tools/adb logcat '*:D' >> adb-log.txt &\nadb logcat --clear\necho \""Generated AVD snapshot for caching.\""\n""",1
"""run"": ""export ANDROID_NDK_HOME=$(pwd)/android-ndk-r21e; export SWIFT_ANDROID_ARCH=x86_64; export SWIFT_ANDROID_HOME=$(pwd)/swift-android-current; export PATH=$ANDROID_NDK_HOME:$PATH; export PATH=$SWIFT_ANDROID_HOME/bin:$SWIFT_ANDROID_HOME/build-tools/current:$PATH; adb wait-for-device; cd core; sourcery; swift-test""",1
"""script"": ""touch adb-log.txt\n$ANDROID_HOME/platform-tools/adb logcat '*:D' >> adb-log.txt &\nsleep 5\n./gradlew uninstallAll jacocoAndroidTestReport --daemon\n""",1
"""run"": ""gzip -9 adb-log.txt"",",1
"""name"": ""Compress Emulator Log"",",1
"""script"": ""adb logcat >logcat.txt & ./gradlew :app:connectedCheck""",1
"""script"": ""adb install app/build/outputs/apk/benchmark/app-benchmark.apk\nadb install app-macrobenchmark/build/outputs/apk/benchmark/app-macrobenchmark-benchmark.apk\nadb root\nadb logcat >logcat.txt & adb shell am instrument -w -e class com.cmgapps.android.curriculumvitae.benchmark.BaselineProfileGenerator  com.cmgapps.android.curriculumvitae.macrobenchmark/androidx.test.runner.AndroidJUnitRunner\nadb pull \""/storage/emulated/0/Android/media/com.cmgapps.android.curriculumvitae.macrobenchmark/BaselineProfileGenerator_generate-baseline-prof.txt\"" .\n""",1
"""path"": ""adb-log.txt.gz""",1
"""name"": ""${{ matrix.api-level }}-${{ matrix.arch }}-${{matrix.target}}-${{matrix.first-boot-delay}}-${{matrix.iteration}}-adb_logs"",",1
"""name"": ""Upload Emulator Log"",",1
"""name"": ""Create Android Emulator"",",1
"""uses"": ""reactivecircus/android-emulator-runner@v2.24.0"",",1
"""name"": ""Download Android Emulator"",",1
"""uses"": ""ReactiveCircus/android-emulator-runner@v2.27.0"",",1
"""uses"": ""reactivecircus/android-emulator-runner@v2.27.0"",",1
"""script"": ""adb logcat >logcat.txt & ./gradlew :wearable:connectedDebugAndroidTest""",1
"""command"": ""./script/emulator/configure_dpi.sh""",1
"""post-emulator-launch-assemble-command"": """",",1
"""name"": ""Config Emulator for Screenshot test"",",1
"""command"": ""./script/emulator/screenshot_config_emulator.sh""",1
"""emulator-options"": ""-no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save"",",1
"""run"": ""$ANDROID_HOME/emulator/emulator -accel-check""",1
"""emulator-options"": ""-no-boot-anim -no-window -gpu off"",",1
"""name"": ""make the emulator script executable"",",1
"""script"": ""# wait for it to finish booting, then take a screenshot\nsleep 30\nadb emu screenrecord screenshot ./screenshot-made-cache.png\n""",1
"""emulator-options"": ""-no-snapshot-save -verbose -no-boot-anim -no-window -gpu off"",",1
"""name"": ""Start emulator"",",1
"""run"": ""start-emulator.sh""",1
"""android/start-emulator"": {",1
"""run"": ""./gradlew :benchmark:pixel2Api31BenchmarkAndroidTest -P android.testoptions.manageddevices.emulator.gpu=\""swiftshader_indirect\"" -P android.testInstrumentationRunnerArguments.androidx.benchmark.enabledRules=BaselineProfile""",1
"""run"": ""set -x\n\necho \""Outcome of 'test_with_cache' ${{ steps.test_with_cache.outcome }}\""\necho \""Outcome of 'test_without_cache' ${{ steps.test_without_cache.outcome }}\""\n\nif [ ! -d tests/output ]; then\n  fastlane get_output_of_tests\n  adb shell logcat -d > tests/output/screenrecords/0_final_logcat.txt\nelse\n  echo \""tests/output exists.\""\n  echo \""Content:\""\n  ls tests/output\nfi\n""",1
"""script"": ""adb root\nadb logcat -c\ntouch emulator.log\nchmod 777 emulator.log\nadb logcat >> emulator.log &\n./gradlew $CI_GRADLE_ARG_PROPERTIES connectedGplayDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=im.vector.app.ui.UiAllScreensSanityTest || (adb pull storage/emulated/0/Pictures/failure_screenshots && exit 1 )\n""",1
"""emulator-build"": 7425822,",1
"""name"": ""Setup emulator"",",1
"""command"": ""echo \""no\"" | avdmanager create avd -n test -k \""system-images;android-21;default;armeabi-v7a\""""",1
"""name"": ""Launch emulator"",",1
"""path"": ""emulator.log\nfailure_screenshots/\n""",1
"""command"": ""export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator -avd test -noaudio -no-boot-anim -no-window -accel on"",",1
"""name"": ""Wait for emulator"",",1
"""emulator-options"": ""-no-accel -accel off -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none"",",1
"""emulator-options"": ""-gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim"",",1
"""script"": ""pwd\njava -version\ncd android-refimpl-app ; ./gradlew assemble\nadb logcat -c\nadb logcat > logcat.txt &\ncd android-refimpl-app ; ./gradlew connectedAndroidTest || echo \""NOERR\""\n""",1
"""script"": ""rm -f /Users/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/android-refimpl-app/app/witness.gradle\nsed -i -e 's#a.getWindow().addFlags#//a.getWindow().addFlagsXXYY#' /Users/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/android-refimpl-app/app/src/main/java/com/zoffcc/applications/trifa/CallingActivity.java\necho 'org.gradle.java.home=/Users/runner/hostedtoolcache/Java_Adopt_jdk/11.0.19-7/x64/Contents/Home' >> /Users/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/android-refimpl-app/gradle.properties\nprintf 'dependencyVerification {\\nverify = [\\n]\\n}\\n' > /Users/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/android-refimpl-app/app/witness.gradle\nexport JAVA_HOME=$(/usr/libexec/java_home -v11)\nexport PATH=\""/Users/runner/hostedtoolcache/Java_Adopt_jdk/11.0.19-7/x64/Contents/Home/bin:$PATH\""\njava -version\ncd android-refimpl-app ; ./gradlew assemble\ncliclick -m verbose m:12,34\nscreencapture -T 42 -x -t png /Users/runner/screen01.png &\nscreencapture -T 43 -x -t png /Users/runner/screen02.png &\nscreencapture -T 43 -x -t png /Users/runner/screen03.png &\nscreencapture -T 44 -x -t png /Users/runner/screen04.png &\nscreencapture -T 45 -x -t png /Users/runner/screen05.png &\nscreencapture -T 46 -x -t png /Users/runner/screen06.png &\nscreencapture -T 50 -x -t png /Users/runner/screen07.png &\nscreencapture -T 51 -x -t png /Users/runner/screen08.png &\nscreencapture -T 52 -x -t png /Users/runner/screen09.png &\nscreencapture -T 53 -x -t png /Users/runner/screen10.png &\nscreencapture -T 60 -x -t png /Users/runner/screen11.png &\nscreencapture -T 61 -x -t png /Users/runner/screen12.png &\nscreencapture -T 62 -x -t png /Users/runner/screen13.png &\nscreencapture -T 63 -x -t png /Users/runner/screen14.png &\nscreencapture -T 64 -x -t png /Users/runner/screen15.png &\nscreencapture -T 65 -x -t png /Users/runner/screen16.png &\nscreencapture -T 66 -x -t png /Users/runner/screen17.png &\nscreencapture -T 67 -x -t png /Users/runner/screen18.png &\nscreencapture -T 68 -x -t png /Users/runner/screen19.png &\nscreencapture -T 69 -x -t png /Users/runner/screen20.png &\nscreencapture -T 240 -x -t png /Users/runner/screen98.png &\nscreencapture -T 300 -x -t png /Users/runner/screen99.png &\nadb logcat -c || echo \""NOERR\""\nadb logcat > /Users/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/android-refimpl-app/logcat.txt &\necho 'sleep 100' > /Users/runner/a.sh\necho 'adb shell \""screencap -p /storage/emulated/0/screen0.png\""' >> /Users/runner/a.sh\necho 'adb pull \""/storage/emulated/0/screen0.png\"" /Users/runner/screen_adb_00.png' >> /Users/runner/a.sh\necho 'sleep 40' >> /Users/runner/a.sh\necho 'adb shell \""screencap -p /storage/emulated/0/screen1.png\""' >> /Users/runner/a.sh\necho 'adb pull \""/storage/emulated/0/screen1.png\"" /Users/runner/screen_adb_01.png' >> /Users/runner/a.sh\necho 'sleep 10' >> /Users/runner/a.sh\necho 'adb shell \""screencap -p /storage/emulated/0/screen2.png\""' >> /Users/runner/a.sh\necho 'adb pull \""/storage/emulated/0/screen2.png\"" /Users/runner/screen_adb_02.png' >> /Users/runner/a.sh\necho 'sleep 10' >> /Users/runner/a.sh\necho 'adb shell \""screencap -p /storage/emulated/0/screen3.png\""' >> /Users/runner/a.sh\necho 'adb pull \""/storage/emulated/0/screen3.png\"" /Users/runner/screen_adb_03.png' >> /Users/runner/a.sh\necho 'sleep 10' >> /Users/runner/a.sh\necho 'adb shell \""screencap -p /storage/emulated/0/screen4.png\""' >> /Users/runner/a.sh\necho 'adb pull \""/storage/emulated/0/screen4.png\"" /Users/runner/screen_adb_04.png' >> /Users/runner/a.sh\ncat /Users/runner/a.sh\nls -al /Users/runner/a.sh\nchmod u+rx /Users/runner/a.sh\nbash /Users/runner/a.sh &\ncd android-refimpl-app ; ./gradlew app:connectedAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=com.zoffcc.applications.trifa.StartMainActivityWrapperTest || echo \""NOERR\""\n""",1
"""run"": ""pwd\ncp -av /Users/runner/screen_adb_02.png screen_shot_android.png\n""",1
"""script"": ""rm -f /Users/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/android-refimpl-app/app/witness.gradle\nsed -i -e 's#a.getWindow().addFlags#//a.getWindow().addFlagsXXYY#' /Users/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/android-refimpl-app/app/src/main/java/com/zoffcc/applications/trifa/CallingActivity.java\necho 'org.gradle.java.home=/Users/runner/hostedtoolcache/Java_Adopt_jdk/11.0.18-10/x64/Contents/Home' >> /Users/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/android-refimpl-app/gradle.properties\nprintf 'dependencyVerification {\\nverify = [\\n]\\n}\\n' > /Users/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/android-refimpl-app/app/witness.gradle\nexport JAVA_HOME=$(/usr/libexec/java_home -v11)\nexport PATH=\""/Users/runner/hostedtoolcache/Java_Adopt_jdk/11.0.18-10/x64/Contents/Home/bin:$PATH\""\njava -version\ncd android-refimpl-app ; ./gradlew assemble\ncliclick -m verbose m:12,34\nscreencapture -T 42 -x -t png /Users/runner/screen01.png &\nscreencapture -T 43 -x -t png /Users/runner/screen02.png &\nscreencapture -T 43 -x -t png /Users/runner/screen03.png &\nscreencapture -T 44 -x -t png /Users/runner/screen04.png &\nscreencapture -T 45 -x -t png /Users/runner/screen05.png &\nscreencapture -T 46 -x -t png /Users/runner/screen06.png &\nscreencapture -T 50 -x -t png /Users/runner/screen07.png &\nscreencapture -T 51 -x -t png /Users/runner/screen08.png &\nscreencapture -T 52 -x -t png /Users/runner/screen09.png &\nscreencapture -T 53 -x -t png /Users/runner/screen10.png &\nscreencapture -T 60 -x -t png /Users/runner/screen11.png &\nscreencapture -T 61 -x -t png /Users/runner/screen12.png &\nscreencapture -T 62 -x -t png /Users/runner/screen13.png &\nscreencapture -T 63 -x -t png /Users/runner/screen14.png &\nscreencapture -T 64 -x -t png /Users/runner/screen15.png &\nscreencapture -T 65 -x -t png /Users/runner/screen16.png &\nscreencapture -T 66 -x -t png /Users/runner/screen17.png &\nscreencapture -T 67 -x -t png /Users/runner/screen18.png &\nscreencapture -T 68 -x -t png /Users/runner/screen19.png &\nscreencapture -T 69 -x -t png /Users/runner/screen20.png &\nscreencapture -T 240 -x -t png /Users/runner/screen98.png &\nscreencapture -T 300 -x -t png /Users/runner/screen99.png &\nadb logcat -c || echo \""NOERR\""\nadb logcat > /Users/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/android-refimpl-app/logcat.txt &\necho 'sleep 100' > /Users/runner/a.sh\necho 'adb shell \""screencap -p /storage/emulated/0/screen0.png\""' >> /Users/runner/a.sh\necho 'adb pull \""/storage/emulated/0/screen0.png\"" /Users/runner/screen_adb_00.png' >> /Users/runner/a.sh\necho 'sleep 40' >> /Users/runner/a.sh\necho 'adb shell \""screencap -p /storage/emulated/0/screen1.png\""' >> /Users/runner/a.sh\necho 'adb pull \""/storage/emulated/0/screen1.png\"" /Users/runner/screen_adb_01.png' >> /Users/runner/a.sh\necho 'sleep 10' >> /Users/runner/a.sh\necho 'adb shell \""screencap -p /storage/emulated/0/screen2.png\""' >> /Users/runner/a.sh\necho 'adb pull \""/storage/emulated/0/screen2.png\"" /Users/runner/screen_adb_02.png' >> /Users/runner/a.sh\necho 'sleep 10' >> /Users/runner/a.sh\necho 'adb shell \""screencap -p /storage/emulated/0/screen3.png\""' >> /Users/runner/a.sh\necho 'adb pull \""/storage/emulated/0/screen3.png\"" /Users/runner/screen_adb_03.png' >> /Users/runner/a.sh\necho 'sleep 10' >> /Users/runner/a.sh\necho 'adb shell \""screencap -p /storage/emulated/0/screen4.png\""' >> /Users/runner/a.sh\necho 'adb pull \""/storage/emulated/0/screen4.png\"" /Users/runner/screen_adb_04.png' >> /Users/runner/a.sh\ncat /Users/runner/a.sh\nls -al /Users/runner/a.sh\nchmod u+rx /Users/runner/a.sh\nbash /Users/runner/a.sh &\ncd android-refimpl-app ; ./gradlew app:connectedAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=com.zoffcc.applications.trifa.StartExportImportTest || echo \""NOERR\""\n""",1
